version: "3"
services:
  alphasquare-virtual-trading:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    ports:
      - 8001:8000
    env_file:
      - ./secrets/.env.development
    volumes:
      - .:/workspace
      - alphasquare-virtual-trading-packages:/usr/local/lib/python3.8/site-packages/
      - alphasquare-virtual-trading-bin:/usr/local/bin
    networks:
      - db-network
      - redis-network
      - celery-broker-network
      - kafka-network
    depends_on:
      - db
      - redis

  test-feed:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    env_file:
      - ./secrets/.env.development
    volumes:
      - .:/workspace
      - alphasquare-virtual-trading-packages:/usr/local/lib/python3.8/site-packages/
      - alphasquare-virtual-trading-bin:/usr/local/bin
    command: /bin/bash scripts/test_feed.sh
    networks:
      - redis-network
    depends_on:
      - alphasquare-virtual-trading
      - redis

  db:
    image: postgres:12.1-alpine
    env_file:
      - secrets/.env.development
    volumes:
      - db-volume:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - db-network
    environment:
      - POSTGRES_DB=alphasquare-virtual-trading
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8

  redis:
    image: redis:6.0.1-alpine
    ports:
      - 6379:6379
    networks:
      - redis-network

  broker:
    image: rabbitmq:3.7.17-alpine
    ports:
      - 5672:5672
    networks:
      - celery-broker-network
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  celery_scheduler:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    depends_on:
      - alphasquare-virtual-trading
      - broker
      - redis
    env_file:
      - ./secrets/.env.development
    networks:
      - celery-broker-network
      - db-network
    command: scripts/run-scheduler.sh
    restart: on-failure
    volumes:
      - .:/workspace
      - alphasquare-virtual-trading-packages:/usr/local/lib/python3.8/site-packages/
      - alphasquare-virtual-trading-bin:/usr/local/bin

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-txn-logs:/var/lib/zookeeper/log

  broker-1:
    image: confluentinc/cp-server:6.0.1
    hostname: broker-1
    container_name: broker-1
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    networks:
      - kafka-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: rack-1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:29091,PLAINTEXT_HOST://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      CONFLUENT_METRICS_ENABLE: "true"
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker-1:29091
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_SUPPORT_CUSTOMER_ID: "broker-1"
    volumes:
      - broker1-data:/var/lib/kafka/data

  broker-2:
    image: confluentinc/cp-server:6.0.1
    hostname: broker-2
    container_name: broker-2
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - kafka-network
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_BROKER_RACK: rack-2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      CONFLUENT_METRICS_ENABLE: "true"
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker-2:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_SUPPORT_CUSTOMER_ID: "broker-2"
    volumes:
      - broker2-data:/var/lib/kafka/data

  broker-3:
    image: confluentinc/cp-server:6.0.1
    hostname: broker-3
    container_name: broker-3
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    networks:
      - kafka-network
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_BROKER_RACK: rack-3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      CONFLUENT_METRICS_ENABLE: "true"
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker-3:29093
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_SUPPORT_CUSTOMER_ID: "broker-3"
    volumes:
      - broker3-data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    ports:
      - "8081:8081"
    networks:
      - kafka-network
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker-1:29091,broker-2:29092,broker-3:29093
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  connect:
    image: cnfldemos/cp-server-connect-datagen:0.4.0-6.0.1
    hostname: connect
    container_name: connect
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - schema-registry
    ports:
      - "8083:8083"
    networks:
      - kafka-network
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker-1:29091,broker-2:29092,broker-3:29093
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-6.0.1.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - schema-registry
      - connect
      - ksqldb-server
    ports:
      - "9021:9021"
    networks:
      - kafka-network
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: broker-1:29091,broker-2:29092,broker-3:29093
      CONTROL_CENTER_CONNECT_CLUSTER: "connect:8083"
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:6.0.1
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - connect
    ports:
      - "8088:8088"
    networks:
      - kafka-network
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: broker-1:29091,broker-2:29092,broker-3:29093
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:6.0.1
    container_name: ksqldb-cli
    networks:
      - kafka-network
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - connect
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  rest-proxy:
    image: confluentinc/cp-kafka-rest:6.0.1
    depends_on:
      - broker-1
      - schema-registry
    ports:
      - 8085:8085
    hostname: rest-proxy
    container_name: rest-proxy
    networks:
      - kafka-network
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: "broker-1:29091"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8085"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"

networks:
  db-network:
    driver: bridge
  redis-network:
    driver: bridge
  celery-broker-network:
    driver: bridge
  kafka-network:
    driver: bridge

volumes:
  db-volume:
  alphasquare-virtual-trading-packages:
  alphasquare-virtual-trading-bin:
  zookeeper-txn-logs:
  zookeeper-data:
  broker1-data:
  broker2-data:
  broker3-data:
